{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angel\\\\Desktop\\\\Smart\\\\frontend\\\\src\\\\components\\\\charts\\\\HeartRateChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst HeartRateChart = ({\n  data = [],\n  height = 300\n}) => {\n  _s();\n  const chartRef = useRef(null);\n\n  // Generate sample data if no real data is provided\n  const generateSampleData = () => {\n    const now = new Date();\n    const labels = [];\n    const values = [];\n    for (let i = 29; i >= 0; i--) {\n      const time = new Date(now.getTime() - i * 60000); // Every minute for 30 minutes\n      labels.push(time.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      }));\n\n      // Generate realistic heart rate data\n      const baseRate = 72;\n      const variation = Math.sin(i * 0.5) * 15 + Math.random() * 10;\n      values.push(Math.round(baseRate + variation));\n    }\n    return {\n      labels,\n      values\n    };\n  };\n  const chartData = data.length > 0 ? {\n    labels: data.map(d => new Date(d.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Heart Rate (BPM)',\n      data: data.map(d => d.heartRate),\n      borderColor: 'rgb(239, 68, 68)',\n      backgroundColor: 'rgba(239, 68, 68, 0.1)',\n      fill: true,\n      tension: 0.4,\n      pointBackgroundColor: 'rgb(239, 68, 68)',\n      pointBorderColor: '#fff',\n      pointBorderWidth: 2,\n      pointRadius: 4,\n      pointHoverRadius: 6\n    }]\n  } : (() => {\n    const sampleData = generateSampleData();\n    return {\n      labels: sampleData.labels,\n      datasets: [{\n        label: 'Heart Rate (BPM)',\n        data: sampleData.values,\n        borderColor: 'rgb(239, 68, 68)',\n        backgroundColor: 'rgba(239, 68, 68, 0.1)',\n        fill: true,\n        tension: 0.4,\n        pointBackgroundColor: 'rgb(239, 68, 68)',\n        pointBorderColor: '#fff',\n        pointBorderWidth: 2,\n        pointRadius: 3,\n        pointHoverRadius: 5\n      }]\n    };\n  })();\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: 'rgb(239, 68, 68)',\n        borderWidth: 1,\n        callbacks: {\n          label: function (context) {\n            return `Heart Rate: ${context.parsed.y} BPM`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time',\n          font: {\n            size: 12\n          }\n        },\n        grid: {\n          display: false\n        },\n        ticks: {\n          font: {\n            size: 10\n          },\n          maxRotation: 45\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'BPM',\n          font: {\n            size: 12\n          }\n        },\n        min: 40,\n        max: 120,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        },\n        ticks: {\n          font: {\n            size: 10\n          }\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    },\n    elements: {\n      point: {\n        hoverRadius: 8\n      }\n    },\n    animation: {\n      duration: 1000,\n      easing: 'easeInOutQuart'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: `${height}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(HeartRateChart, \"aW/6lq35noP8VJrK3G9P8gm4OYM=\");\n_c = HeartRateChart;\nexport default HeartRateChart;\nvar _c;\n$RefreshReg$(_c, \"HeartRateChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","Line","jsxDEV","_jsxDEV","register","HeartRateChart","data","height","_s","chartRef","generateSampleData","now","Date","labels","values","i","time","getTime","push","toLocaleTimeString","hour","minute","hour12","baseRate","variation","Math","sin","random","round","chartData","length","map","d","timestamp","datasets","label","heartRate","borderColor","backgroundColor","fill","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","sampleData","options","responsive","maintainAspectRatio","plugins","legend","position","font","size","tooltip","mode","intersect","titleColor","bodyColor","borderWidth","callbacks","context","parsed","y","scales","x","display","title","text","grid","ticks","maxRotation","min","max","color","interaction","axis","elements","point","hoverRadius","animation","duration","easing","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Angel/Desktop/Smart/frontend/src/components/charts/HeartRateChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst HeartRateChart = ({ data = [], height = 300 }) => {\n  const chartRef = useRef(null);\n\n  // Generate sample data if no real data is provided\n  const generateSampleData = () => {\n    const now = new Date();\n    const labels = [];\n    const values = [];\n\n    for (let i = 29; i >= 0; i--) {\n      const time = new Date(now.getTime() - i * 60000); // Every minute for 30 minutes\n      labels.push(time.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      }));\n\n      // Generate realistic heart rate data\n      const baseRate = 72;\n      const variation = Math.sin(i * 0.5) * 15 + Math.random() * 10;\n      values.push(Math.round(baseRate + variation));\n    }\n\n    return { labels, values };\n  };\n\n  const chartData = data.length > 0\n    ? {\n        labels: data.map(d => new Date(d.timestamp).toLocaleTimeString()),\n        datasets: [{\n          label: 'Heart Rate (BPM)',\n          data: data.map(d => d.heartRate),\n          borderColor: 'rgb(239, 68, 68)',\n          backgroundColor: 'rgba(239, 68, 68, 0.1)',\n          fill: true,\n          tension: 0.4,\n          pointBackgroundColor: 'rgb(239, 68, 68)',\n          pointBorderColor: '#fff',\n          pointBorderWidth: 2,\n          pointRadius: 4,\n          pointHoverRadius: 6,\n        }]\n      }\n    : (() => {\n        const sampleData = generateSampleData();\n        return {\n          labels: sampleData.labels,\n          datasets: [{\n            label: 'Heart Rate (BPM)',\n            data: sampleData.values,\n            borderColor: 'rgb(239, 68, 68)',\n            backgroundColor: 'rgba(239, 68, 68, 0.1)',\n            fill: true,\n            tension: 0.4,\n            pointBackgroundColor: 'rgb(239, 68, 68)',\n            pointBorderColor: '#fff',\n            pointBorderWidth: 2,\n            pointRadius: 3,\n            pointHoverRadius: 5,\n          }]\n        };\n      })();\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: 'rgb(239, 68, 68)',\n        borderWidth: 1,\n        callbacks: {\n          label: function(context) {\n            return `Heart Rate: ${context.parsed.y} BPM`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time',\n          font: {\n            size: 12\n          }\n        },\n        grid: {\n          display: false\n        },\n        ticks: {\n          font: {\n            size: 10\n          },\n          maxRotation: 45\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'BPM',\n          font: {\n            size: 12\n          }\n        },\n        min: 40,\n        max: 120,\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        },\n        ticks: {\n          font: {\n            size: 10\n          }\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    },\n    elements: {\n      point: {\n        hoverRadius: 8\n      }\n    },\n    animation: {\n      duration: 1000,\n      easing: 'easeInOutQuart'\n    }\n  };\n\n  return (\n    <div style={{ height: `${height}px` }}>\n      <Line ref={chartRef} data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default HeartRateChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}